# Maintainer: Ryon Sherman <ryon.sherman@gmail.com>
# Contributor: Iven Hsu <ivenvd AT gmail>
# Contributor: Nathan Hulse <nat.hulse@gmail.com>

pkgname=compiz-dev
_pkgseries=0.9.10
pkgver=${_pkgseries}.0
pkgrel=1
pkgdesc="Composite manager for Aiglx and Xgl, with plugins and CCSM (development milestone)"

arch=('i686' 'x86_64')
license=('GPL' 'LGPL' 'MIT')
url="https://launchpad.net/compiz"

conflicts=('compiz-bzr' 'compiz-core' 'compiz-fusion-plugins-main' 'compiz-fusion-plugins-extra' 'compiz-decorator-gtk' 'compiz-decorator-kde' 'libcompizconfig' 'compizconfig-python' 'compizconfig-backend-gconf' 'compiz-bcop' 'ccsm')
replaces=('compiz-bzr' 'compiz-core' 'compiz-fusion-plugins-main' 'compiz-fusion-plugins-extra' 'compiz-decorator-gtk' 'compiz-decorator-kde' 'libcompizconfig' 'compizconfig-python' 'compizconfig-backend-gconf' 'compiz-bcop' 'ccsm')

makedepends=('intltool' 'cmake')
depends=('boost' 'xorg-server' 'libxcomposite' 'startup-notification' 'librsvg' 'dbus' 'mesa' 'libxslt' 'fuse' 'glibmm' 'libxrender' 'gmock' 'libwnck' 'pygtk' 'desktop-file-utils' 'pyrex' 'protobuf')
optdepends=(
  'dconf: for GSettings backend support'
  'gtk2: for GTK window decorator (then rebuild this package)'
  'metacity: Metacity window decoration themes support (then rebuild this package)'
  'gnome-control-center: GNOME keybindings support (then rebuild this package)'
  'kdebase-lib: KDE window decoration support (then rebuild this package)'
  'automoc: KDE window decoration support (then rebuild this package)'
)

install='compiz-dev.install'
source=(
  "https://launchpad.net/compiz/${_pkgseries}/${pkgver}/+download/compiz-${pkgver}.tar.bz2"
)
md5sums=(
  'c65fe20e464405889d77a0783fa52f20'
)

# GTK window decorator support
GTKWINDOWDECORATOR="off"
# Metaciy theme support for GTK window decorator
METACITY="off"
# KDE window decorator support
KDEWINDOWDECORATOR="off"
# GConf backend support
GCONF="on"
# GSettings backend support
GSETTINGS="on"

prepare() {
  cd "compiz-${pkgver}"

  export PYTHON="/usr/bin/python2"

  find -type f \( -name 'CMakeLists.txt' -or -name '*.cmake' \) -exec sed -e 's/COMMAND python/COMMAND python2/g' -i {} \;
  find compizconfig/ccsm -type f -exec sed -e 's|^#!.*python|#!/usr/bin/env python2|g' -i {} \;

  mkdir build; cd build
  cmake .. \
    -DCMAKE_INSTALL_PREFIX="/usr" \
    -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 \
    -DPYTHON_LIBRARY=/usr/lib/libpython2.7.so \
    -DCMAKE_BUILD_TYPE="Release" \
    -DQT_QMAKE_EXECUTABLE=qmake-qt4 \
    -DCOMPIZ_DISABLE_SCHEMAS_INSTALL=On \
    -DCOMPIZ_BUILD_WITH_RPATH=Off \
    -DCOMPIZ_PACKAGING_ENABLED=On \
    -DBUILD_GTK="${GTKWINDOWDECORATOR}" \
    -DBUILD_METACITY="${METACITY}" \
    -DBUILD_KDE4="${KDEWINDOWDECORATOR}" \
    -DUSE_GCONF="${GCONF}" \
    -DUSE_GSETTINGS="${GSETTINGS}" \
    -DCOMPIZ_BUILD_TESTING=Off \
    -DCOMPIZ_WERROR=Off \
    -DCOMPIZ_DEFAULT_PLUGINS="composite,opengl,decor,resize,place,move"
}

build() {
  cd "compiz-${pkgver}/build"
  make
}

package() {
  cd "compiz-${pkgver}/build"
  make DESTDIR="${pkgdir}" install

  # Stupid findcompiz_install needs COMPIZ_DESTDIR and install needs DESTDIR
  # make findcompiz_install
  CMAKE_DIR=$(cmake --system-information | grep '^CMAKE_ROOT' | awk -F\" '{print $2}')
  install -dm755 "${pkgdir}${CMAKE_DIR}/Modules/"
  install -m644 ../cmake/FindCompiz.cmake "${pkgdir}${CMAKE_DIR}/Modules/"

  # Add documentation
  install -dm755 "${pkgdir}/usr/share/doc/compiz/"
  install ../{AUTHORS,NEWS,README} "${pkgdir}/usr/share/doc/compiz/"

  # Amend XDG .desktop file to load the compizconfig plugin with compiz
  sed -i 's/Exec\=compiz/Exec\=compiz ccp/' "${pkgdir}/usr/share/applications/compiz.desktop"

  # Merge the gconf schema files
  if [ -d "${pkgdir}/usr/share/gconf/schemas" ]; then
    gconf-merge-schema "${pkgdir}/usr/share/gconf/schemas/compiz.schemas.in" "{$pkgdir}"/usr/share/gconf/schemas/*.schemas
    sed -i '/<schemalist\/>/d' "${pkgdir}/usr/share/gconf/schemas/compiz.schemas.in"
    rm -f "${pkgdir}"/usr/share/gconf/schemas/*.schemas
    mv "${pkgdir}/usr/share/gconf/schemas/compiz.schemas.in" "${pkgdir}/usr/share/gconf/schemas/compiz.schemas"
  fi

  # Add the pesky gsettings schema files manually
  if ls generated/glib-2.0/schemas/ | grep -qm1 .gschema.xml; then
    install -dm755 "${pkgdir}/usr/share/glib-2.0/schemas/"
    install -m644 generated/glib-2.0/schemas/*.gschema.xml "${pkgdir}/usr/share/glib-2.0/schemas/"
  fi
}
